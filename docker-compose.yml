version: '3.8'

services:

  admin_site:
    build: backend/
    expose:
      - "8000"
    volumes:
      - ./backend/static:/opt/app/static/
      - media:/opt/app/media/
    env_file:
      - .env
    command: uwsgi --strict --ini uwsgi.ini

  worker_front_to_back:
    build:
      context: workers
      dockerfile: Dockerfile
    volumes:
      - ./results:/tmp
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./frontend:/usr/share/nginx/html/
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./backend/static:/var/www/static/:ro
      - media:/var/www/media/:ro
    depends_on:
      - admin_site
    ports:
      - "80:80"
  
  postgres:
    image: postgres:14.6-alpine3.17
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.11.7-management-alpine
    restart: always
    env_file:
      - .env
    healthcheck:
        test: ["CMD", "nc", "-z", "localhost", "5672" ]
        interval: 10s
        timeout: 10s
        retries: 5    

volumes:
  media:
  postgres_data:

networks: 
  default:
    name: voucher_app_net

